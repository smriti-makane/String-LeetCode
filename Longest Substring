3. Longest Substring Without Repeating Characters
Given a string s, find the length of the longest substring without duplicate characters.

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

Approach used : Two pointers and creating a substring

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int maxi = 0 ; 
        for(int i = 0 ; i<s.length(); i++){
            String sub = ""; 
            for(int j = i ; j<s.length(); j++){
                char c = s.charAt(j); 
                if(sub.contains(String.valueOf(c))){
                    break; 
                }
                sub+= c; 
                maxi= Math.max(maxi, sub.length()); 
            }
        }
        return maxi; 
    }
}
